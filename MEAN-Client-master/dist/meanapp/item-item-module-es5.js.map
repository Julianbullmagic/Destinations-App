{"version":3,"sources":["webpack:///src/app/item/item.component.html","webpack:///src/app/item/item-routing.module.ts","webpack:///src/app/item/item.component.css","webpack:///src/app/item/item.component.ts","webpack:///src/app/item/item.module.ts"],"names":["routes","path","component","ItemRoutingModule","imports","forChild","exports","ItemComponent","route","itemsService","router","itemId","snapshot","paramMap","get","updateItemForm","name","required","description","amount","image","latitude","longitude","formData","confirmSubmit","confirm","console","log","updateItem","subscribe","data","navigateByUrl","skipLocationChange","then","navigate","getItem","item","setValue","values","deleteItem","valueChanges","onFormChanges","selector","template","ItemModule","declarations"],"mappings":"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","file":"item-item-module-es5.js","sourcesContent":["export default \"<a class=\\\"back\\\" routerLink='/'><i class=\\\"fas fa-arrow-left\\\"></i></a>\\n<section class=\\\"updateitemsection\\\">\\n\\n  <form (ngSubmit)=\\\"updateItem(updateItemForm.value)\\\" [formGroup]=\\\"updateItemForm\\\">\\n\\n    <h2>Update Product Form</h2>\\n    <p>Change the form values to update the current item in the store.</p>\\n\\n   <div class=\\\"formcontrol\\\">\\n    <label for=\\\"name\\\">Product Name:</label>\\n    <input type=\\\"text\\\" formControlName=\\\"name\\\">\\n  </div>\\n\\n  <div class=\\\"formcontrol\\\">\\n    <label for=\\\"description\\\">Product Description:</label>\\n    <textarea formControlName=\\\"description\\\"></textarea>\\n  </div>\\n  <div class=\\\"formcontrol\\\">\\n      <label for=\\\"image\\\"> Product Image: </label>\\n      <input type=\\\"url\\\" name=\\\"image\\\" formControlName=\\\"image\\\">\\n  </div>\\n  <div class=\\\"formcontrol\\\">\\n      <label for=\\\"amount\\\"> Product Price Per Item: </label>\\n      <input type=\\\"number\\\" name=\\\"amount\\\" formControlName=\\\"amount\\\">\\n  </div>\\n  <div class=\\\"formcontrol\\\">\\n      <label for=\\\"latitude\\\"> Latitude: </label>\\n      <input type=\\\"number\\\" name=\\\"amount\\\" formControlName=\\\"latitude\\\">\\n  </div>\\n  <div class=\\\"formcontrol\\\">\\n      <label for=\\\"longitude\\\"> Longitude: </label>\\n      <input type=\\\"number\\\" name=\\\"amount\\\" formControlName=\\\"longitude\\\">\\n  </div>\\n    <input type=\\\"submit\\\" [disabled]=\\\"!updateItemForm.valid\\\" value=\\\"Submit\\\">\\n  </form>\\n\\n\\n  <div class=\\\"previewsection\\\">\\n    <button (click)=\\\"deleteItem(item._id)\\\">Delete this item</button>\\n\\n    <h2>Product Preview</h2>\\n\\n    <div>\\n      <p>Product Image:</p>\\n      <div *ngIf=\\\"item\\\">\\n        <img class=\\\"image\\\" [src]=\\\"item.image\\\" alt=\\\"image placeholder\\\" />\\n      </div>\\n    </div>\\n    <div>\\n      <p>Product price: <span>{{amount}}</span></p>\\n    </div>\\n    <div>\\n      <p>Product Name: <span>{{name}}</span></p>\\n      <p>Product description: <span>{{description}}</span></p>\\n      <p>Latitude: <span>{{latitude}}</span></p>\\n      <p>Longiude: <span>{{longitude}}</span></p>\\n\\n    </div>\\n\\n\\n  </div>\\n</section>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {ItemComponent} from \"./item.component\";\n\nconst routes: Routes = [\n  { path: '', component: ItemComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ItemRoutingModule { }","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2l0ZW0vaXRlbS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport {FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\n\n\nimport {ItemsService} from \"../items.service\";\n\n@Component({\n  selector: 'app-item',\n  templateUrl: './item.component.html',\n  styleUrls: ['./item.component.css']\n})\nexport class ItemComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private itemsService: ItemsService, private router: Router) { }\n\n  //get the id passed on the url\n  itemId = this.route.snapshot.paramMap.get(\"id\");\n  item: object;\n  name:string;\n  description:string;\n  amount: number;\n  image: string;\n  latitude:number;\n  longitude:number;\n\n\n  public updateItemForm = new FormGroup({\n    name: new FormControl('', Validators.required),\n    description: new FormControl('',  Validators.required),\n    amount: new FormControl('',  Validators.required),\n    image: new FormControl('',  Validators.required),\n    latitude: new FormControl('',  Validators.required),\n    longitude: new FormControl('',  Validators.required),\n\n  });\n\n\n  updateItem(formData: FormData) {\n    let confirmSubmit = confirm(\"Are you sure you want to update this item?\");\n    console.log(formData)\n\n    if(confirmSubmit){\n      console.log(\"you clicked yes\");\n\n      this.itemsService.updateItem(this.itemId, formData).subscribe( data => {\n        console.log(data);\n        //refresh the current page\n        this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\n        this.router.navigate([\"item\", this.itemId]));\n      })\n\n    }else{\n      console.log(\"you clicked NO\");\n      return false;\n    }\n  }\n\n\n  getItem(){\n    this.itemsService.getItem(this.itemId).subscribe(item => {\n    this.item = item[\"item\"];\n      this.updateItemForm.setValue({\n        name: item[\"item\"][\"name\"],\n        description: item[\"item\"][\"description\"],\n        amount: item[\"item\"][\"amount\"],\n        image: item[\"item\"][\"image\"]\n      })\n\n    });\n  }\n\n  onFormChanges(values: any){\n    this.name = values.name;\n    this.amount = values.amount;\n    this.description = values.description;\n    this.image = values.image\n  }\n\n  deleteItem(itemId: string){\n    this.itemsService.deleteItem(itemId).subscribe(data => {\n      console.log(data);\n      this.router.navigate([\"/\"]);\n    })\n  }\n\n\n  ngOnInit() {\n    this.getItem();\n\n    this.updateItemForm.valueChanges.subscribe( values => {\n      console.log(values);\n      this.onFormChanges(values);\n    })\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport {CommonModule} from \"@angular/common\";\nimport { ItemRoutingModule } from './item-routing.module';\nimport { ItemComponent } from './item.component';\n\n//need to import ReactiveForms module here too\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    ItemRoutingModule,\n    ReactiveFormsModule,\n    CommonModule\n  ],\n  declarations: [ItemComponent]\n})\nexport class ItemModule { }\n"]}