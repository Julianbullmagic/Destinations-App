{"version":3,"sources":["./src/app/item/item.component.html","./src/app/item/item-routing.module.ts","./src/app/item/item.component.css","./src/app/item/item.component.ts","./src/app/item/item.module.ts"],"names":[],"mappings":"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","file":"item-item-module-es2015.js","sourcesContent":["export default \"<a class=\\\"back\\\" routerLink='/'><i class=\\\"fas fa-arrow-left\\\"></i></a>\\n<section class=\\\"updateitemsection\\\">\\n\\n  <form (ngSubmit)=\\\"updateItem(updateItemForm.value)\\\" [formGroup]=\\\"updateItemForm\\\">\\n\\n    <h2>Update Product Form</h2>\\n    <p>Change the form values to update the current item in the store.</p>\\n\\n   <div class=\\\"formcontrol\\\">\\n    <label for=\\\"name\\\">Product Name:</label>\\n    <input type=\\\"text\\\" formControlName=\\\"name\\\">\\n  </div>\\n\\n  <div class=\\\"formcontrol\\\">\\n    <label for=\\\"description\\\">Product Description:</label>\\n    <textarea formControlName=\\\"description\\\"></textarea>\\n  </div>\\n  <div class=\\\"formcontrol\\\">\\n      <label for=\\\"image\\\"> Product Image: </label>\\n      <input type=\\\"url\\\" name=\\\"image\\\" formControlName=\\\"image\\\">\\n  </div>\\n  <div class=\\\"formcontrol\\\">\\n      <label for=\\\"amount\\\"> Product Price Per Item: </label>\\n      <input type=\\\"number\\\" name=\\\"amount\\\" formControlName=\\\"amount\\\">\\n  </div>\\n  <div class=\\\"formcontrol\\\">\\n      <label for=\\\"latitude\\\"> Latitude: </label>\\n      <input type=\\\"number\\\" name=\\\"amount\\\" formControlName=\\\"latitude\\\">\\n  </div>\\n  <div class=\\\"formcontrol\\\">\\n      <label for=\\\"longitude\\\"> Longitude: </label>\\n      <input type=\\\"number\\\" name=\\\"amount\\\" formControlName=\\\"longitude\\\">\\n  </div>\\n    <input type=\\\"submit\\\" [disabled]=\\\"!updateItemForm.valid\\\" value=\\\"Submit\\\">\\n  </form>\\n\\n\\n  <div class=\\\"previewsection\\\">\\n    <button (click)=\\\"deleteItem(item._id)\\\">Delete this item</button>\\n\\n    <h2>Product Preview</h2>\\n\\n    <div>\\n      <p>Product Image:</p>\\n      <div *ngIf=\\\"item\\\">\\n        <img class=\\\"image\\\" [src]=\\\"item.image\\\" alt=\\\"image placeholder\\\" />\\n      </div>\\n    </div>\\n    <div>\\n      <p>Product price: <span>{{amount}}</span></p>\\n    </div>\\n    <div>\\n      <p>Product Name: <span>{{name}}</span></p>\\n      <p>Product description: <span>{{description}}</span></p>\\n      <p>Latitude: <span>{{latitude}}</span></p>\\n      <p>Longiude: <span>{{longitude}}</span></p>\\n\\n    </div>\\n\\n\\n  </div>\\n</section>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {ItemComponent} from \"./item.component\";\n\nconst routes: Routes = [\n  { path: '', component: ItemComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ItemRoutingModule { }","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2l0ZW0vaXRlbS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport {FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\n\n\nimport {ItemsService} from \"../items.service\";\n\n@Component({\n  selector: 'app-item',\n  templateUrl: './item.component.html',\n  styleUrls: ['./item.component.css']\n})\nexport class ItemComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private itemsService: ItemsService, private router: Router) { }\n\n  //get the id passed on the url\n  itemId = this.route.snapshot.paramMap.get(\"id\");\n  item: object;\n  name:string;\n  description:string;\n  amount: number;\n  image: string;\n  latitude:number;\n  longitude:number;\n\n\n  public updateItemForm = new FormGroup({\n    name: new FormControl('', Validators.required),\n    description: new FormControl('',  Validators.required),\n    amount: new FormControl('',  Validators.required),\n    image: new FormControl('',  Validators.required),\n    latitude: new FormControl('',  Validators.required),\n    longitude: new FormControl('',  Validators.required),\n\n  });\n\n\n  updateItem(formData: FormData) {\n    let confirmSubmit = confirm(\"Are you sure you want to update this item?\");\n    console.log(formData)\n\n    if(confirmSubmit){\n      console.log(\"you clicked yes\");\n\n      this.itemsService.updateItem(this.itemId, formData).subscribe( data => {\n        console.log(data);\n        //refresh the current page\n        this.router.navigateByUrl('/', {skipLocationChange: true}).then(()=>\n        this.router.navigate([\"item\", this.itemId]));\n      })\n\n    }else{\n      console.log(\"you clicked NO\");\n      return false;\n    }\n  }\n\n\n  getItem(){\n    this.itemsService.getItem(this.itemId).subscribe(item => {\n    this.item = item[\"item\"];\n      this.updateItemForm.setValue({\n        name: item[\"item\"][\"name\"],\n        description: item[\"item\"][\"description\"],\n        amount: item[\"item\"][\"amount\"],\n        image: item[\"item\"][\"image\"]\n      })\n\n    });\n  }\n\n  onFormChanges(values: any){\n    this.name = values.name;\n    this.amount = values.amount;\n    this.description = values.description;\n    this.image = values.image\n  }\n\n  deleteItem(itemId: string){\n    this.itemsService.deleteItem(itemId).subscribe(data => {\n      console.log(data);\n      this.router.navigate([\"/\"]);\n    })\n  }\n\n\n  ngOnInit() {\n    this.getItem();\n\n    this.updateItemForm.valueChanges.subscribe( values => {\n      console.log(values);\n      this.onFormChanges(values);\n    })\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport {CommonModule} from \"@angular/common\";\nimport { ItemRoutingModule } from './item-routing.module';\nimport { ItemComponent } from './item.component';\n\n//need to import ReactiveForms module here too\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    ItemRoutingModule,\n    ReactiveFormsModule,\n    CommonModule\n  ],\n  declarations: [ItemComponent]\n})\nexport class ItemModule { }\n"],"sourceRoot":"webpack:///"}